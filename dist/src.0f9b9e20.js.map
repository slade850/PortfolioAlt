{"version":3,"sources":["index.js"],"names":["App","console","log","render","document","getElementById","AppComponent","init","Input","id","type","placeholder","parent","req","value","state","nodeElementInput","createElement","required","handleChange","bind","addEventListener","event","target","appendChild","FormElement","title","action","input","allInput","variables","nodeParent","querySelector","nodeElement","innerHTML","forEach","el","push","i","indexOf","submitButton","innerText","handleSubmit","preventDefault","body","fetch","method","headers","JSON","stringify","then","response","json","data","NewLoginForm","NewRegisterForm"],"mappings":"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","file":"src.0f9b9e20.js","sourceRoot":"../src","sourcesContent":["\nclass App{\n    init() {\n        console.log(this);\n        this.render();\n    }\n\n    render(){\n        const app = document.getElementById('app');\n    }\n}\n\nconst AppComponent = new App();\nAppComponent.init();\n\nclass Input {\n    constructor(id, type, placeholder, parent, req){\n        this.id = id;\n        this.type = type;\n        this.placeholder = placeholder;\n        this.parent = parent;\n        this.req = req;\n\n        this.value = \"\";\n        this.state = {};\n        //<input>\n        this.nodeElementInput = document.createElement('input');\n        this.nodeElementInput.type = this.type;\n        this.nodeElementInput.placeholder = this.placeholder;\n        this.nodeElementInput.id = this.id;\n\n        if(this.req){\n            this.nodeElementInput.required = true;\n        }\n        \n        this.handleChange = this.handleChange.bind(this);\n        this.nodeElementInput.addEventListener('change', this.handleChange);\n    }\n    init(){\n        this.render();\n    }\n\n    handleChange(event){\n        this.value = event.target.value;\n    }\n\n    render(){\n        this.parent.appendChild(this.nodeElementInput);\n    }\n    \n}\n\nclass FormElement {\n    constructor(title, id, action, parent, input){\n        this.title = title\n        this.id = id;\n        this.action = action;\n        this.parent = parent;\n        this.allInput = input;\n        this.variables = [];\n\n        this.nodeParent = document.querySelector(`#${parent}`);\n        this.nodeElement = document.createElement('form');\n        this.nodeElement.id = this.id;\n        this.nodeElement.innerHTML = `<h2>${this.title}</h2>`;\n\n        this.allInput.forEach(el => {\n            this.variables.push(el.id);\n            let i = this.variables.indexOf(el.id);\n            this.variables[i] = new Input(el.id, el.type, el.id, this.nodeElement, el.req);\n        });\n\n        this.init();\n\n        this.submitButton = document.createElement('button');\n        this.submitButton.type = 'submit';\n        this.submitButton.innerText = 'Submit';\n        this.nodeElement.appendChild(this.submitButton);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.nodeElement.addEventListener('submit', this.handleSubmit);\n    }\n\n    init(){\n        this.render();\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        let body = {};\n        this.variables.forEach(el => {\n            body[el.id] = el.value;\n        })\n        console.log(body, this.action);\n        fetch(this.action, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        }).then(response => {\n            response.json().then(data => {\n                console.log(data);\n            })\n        })\n    }\n\n    render(){\n        this.nodeParent.appendChild(this.nodeElement);\n        this.variables.forEach(el => el.init());\n    }\n}\n\nconst NewLoginForm = new FormElement('Login','loginForm', 'http://localhost:3000/api/user/authenticate', 'app', [{id: 'namefield', type: 'text', req: true},{id: 'password', type: 'password', req: true}])\nNewLoginForm\n\nconst NewRegisterForm = new FormElement('Register','registerForm', 'http://localhost:3000/api/user/register', 'app', [{id: 'username', type: 'text', req: true},{id: 'email', type: 'email', req: true},{id: 'password', type: 'password', req: true}])\nNewRegisterForm"]}